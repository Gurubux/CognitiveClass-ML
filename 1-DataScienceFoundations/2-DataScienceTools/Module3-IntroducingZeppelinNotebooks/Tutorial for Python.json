{"paragraphs":[{"title":"Tutorial 1: Spark with Python","text":"%md\n\nIn this notebook, we will read data from a comma separated file (__.csv__) file and use _pySpark_ to convet it into a spark dataframe. Then, we query data using sql command, and visualize it.","dateUpdated":"2016-08-19T12:15:44+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>In this notebook, we will read data from a comma separated file (<strong>.csv</strong>) file and use <em>pySpark</em> to convet it into a spark dataframe. Then, we query data using sql command, and visualize it.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>In this notebook, we will read data from a comma separated file (<strong>.csv</strong>) file and use <em>pySpark</em> to convet it into a spark dataframe. Then, we query data using sql command, and visualize it.</p>\n"},"apps":[],"jobName":"paragraph_1453476675643_18091181","id":"20160122-153115_233315907","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:15:46+0000","dateFinished":"2016-08-19T12:15:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:13282"},{"title":"Load data","text":"%md\n\nThe first step in this tutorial, is to download _bank.csv_. This file is already uploaded into \"https://s3.amazonaws.com/apache-zeppelin/tutorial/bank/bank.csv\" and you can download it. This dataset is public available for research. The details are described in this <a href=\"https://repositorium.sdum.uminho.pt/bitstream/1822/14838/1/MoroCortezLaureano_DMApproach4DirectMKT.pdf\" target=\"_blank\">[pdf]</a>. This dataset has information about some customers  of a bank, for instance, their age, job, marital status, education, balance, etc.\n<br>\n\n\n\n\nYou can use a bash command to download a file into Zeppline. The data file should be uploaded somewhere on the internet and have a http or https URL for accessing it. You can then pull it using the __wget__ command through __%sh__ to download the data file into Zeppline.\n\nFor more info, check [this link](http://support.datascientistworkbench.com/knowledgebase/articles/781422-how-to-import-data-for-use-by-apache-zeppelin).","dateUpdated":"2016-08-19T12:17:49+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","title":true,"enabled":true,"editorHide":false,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>The first step in this tutorial, is to download <em>bank.csv</em>. This file is already uploaded into &ldquo;https://s3.amazonaws.com/apache-zeppelin/tutorial/bank/bank.csv&rdquo; and you can download it. This dataset is public available for research. The details are described in this <a href=\"https: //repositorium.sdum.uminho.pt/bitstream/1822/14838/1/MoroCortezLaureano_DMApproach4DirectMKT.pdf\" target=\"_blank\">[pdf]</a>. This dataset has information about some customers  of a bank, for instance, their age, job, marital status, education, balance, etc.\n<br  /><br></p>\n<p>You can use a bash command to download a file into Zeppline. The data file should be uploaded somewhere on the internet and have a http or https URL for accessing it. You can then pull it using the <strong>wget</strong> command through <strong>%sh</strong> to download the data file into Zeppline.</p>\n<p>For more info, check <a href=\"http://support.datascientistworkbench.com/knowledgebase/articles/781422-how-to-import-data-for-use-by-apache-zeppelin\">this link</a>.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>The first step in this tutorial, is to download <em>bank.csv</em>. This file is already uploaded into &ldquo;https://s3.amazonaws.com/apache-zeppelin/tutorial/bank/bank.csv&rdquo; and you can download it. This dataset is public available for research. The details are described in this <a href=\"https: //repositorium.sdum.uminho.pt/bitstream/1822/14838/1/MoroCortezLaureano_DMApproach4DirectMKT.pdf\" target=\"_blank\">[pdf]</a>. This dataset has information about some customers  of a bank, for instance, their age, job, marital status, education, balance, etc.\n<br  /><br></p>\n<p>You can use a bash command to download a file into Zeppline. The data file should be uploaded somewhere on the internet and have a http or https URL for accessing it. You can then pull it using the <strong>wget</strong> command through <strong>%sh</strong> to download the data file into Zeppline.</p>\n<p>For more info, check <a href=\"http://support.datascientistworkbench.com/knowledgebase/articles/781422-how-to-import-data-for-use-by-apache-zeppelin\">this link</a>.</p>\n"},"apps":[],"jobName":"paragraph_1453476675643_18091181","id":"20160122-153115_1220298425","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:15:48+0000","dateFinished":"2016-08-19T12:15:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13283"},{"text":"%sh\nwget  --quiet --output-document bank.csv  https://s3.amazonaws.com/apache-zeppelin/tutorial/bank/bank.csv ","dateUpdated":"2016-08-19T12:15:48+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","enabled":true,"results":[],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"result":{"code":"SUCCESS","type":"TEXT","msg":""},"apps":[],"jobName":"paragraph_1453476675643_18091181","id":"20160122-153115_498508797","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:15:53+0000","dateFinished":"2016-08-19T12:15:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13284"},{"text":"%md\nYou need to import the packages that we need for this tutorial\n\n__Note:__ Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext) by default. So you don't need create them manually","dateUpdated":"2016-08-19T12:15:53+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>You need to import the packages that we need for this tutorial</p>\n<p><strong>Note:</strong> Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext) by default. So you don't need create them manually</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>You need to import the packages that we need for this tutorial</p>\n<p><strong>Note:</strong> Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext) by default. So you don't need create them manually</p>\n"},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_2145415626","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:15:56+0000","dateFinished":"2016-08-19T12:15:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13285"},{"text":"%pyspark\nfrom pyspark.sql.types import *","dateUpdated":"2016-08-19T12:15:58+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/scala","results":[],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"result":{"code":"SUCCESS","type":"TEXT","msg":""},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_850879091","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:16:04+0000","dateFinished":"2016-08-19T12:16:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13286"},{"title":"Converting .CSV file to RDD","text":"%md\n To transform data from csv format into RDD, run following script. This will make a new RDD from the _.csv_ file, namely _bankDataset_.\n__Take__ shows some elements of our RDD. Lets look at the first five rows of the data set.","dateUpdated":"2016-08-19T12:16:04+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>To transform data from csv format into RDD, run following script. This will make a new RDD from the <em>.csv</em> file, namely <em>bankDataset</em>.\n<br  /><strong>Take</strong> shows some elements of our RDD. Lets look at the first five rows of the data set.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>To transform data from csv format into RDD, run following script. This will make a new RDD from the <em>.csv</em> file, namely <em>bankDataset</em>.\n<br  /><strong>Take</strong> shows some elements of our RDD. Lets look at the first five rows of the data set.</p>\n"},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_403989266","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:16:07+0000","dateFinished":"2016-08-19T12:16:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13287"},{"text":"%pyspark\nbankDataset = sc.textFile(\"bank.csv\")\nprint bankDataset.take(5)","dateUpdated":"2016-08-19T12:16:10+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[u'\"age\";\"job\";\"marital\";\"education\";\"default\";\"balance\";\"housing\";\"loan\";\"contact\";\"day\";\"month\";\"duration\";\"campaign\";\"pdays\";\"previous\";\"poutcome\";\"y\"', u'30;\"unemployed\";\"married\";\"primary\";\"no\";1787;\"no\";\"no\";\"cellular\";19;\"oct\";79;1;-1;0;\"unknown\";\"no\"', u'33;\"services\";\"married\";\"secondary\";\"no\";4789;\"yes\";\"yes\";\"cellular\";11;\"may\";220;1;339;4;\"failure\";\"no\"', u'35;\"management\";\"single\";\"tertiary\";\"no\";1350;\"yes\";\"no\";\"cellular\";16;\"apr\";185;1;330;1;\"failure\";\"no\"', u'30;\"management\";\"married\";\"tertiary\";\"no\";1476;\"yes\";\"yes\";\"unknown\";3;\"jun\";199;4;-1;0;\"unknown\";\"no\"']\n"}]},"result":{"code":"SUCCESS","type":"TEXT","msg":"[u'\"age\";\"job\";\"marital\";\"education\";\"default\";\"balance\";\"housing\";\"loan\";\"contact\";\"day\";\"month\";\"duration\";\"campaign\";\"pdays\";\"previous\";\"poutcome\";\"y\"', u'30;\"unemployed\";\"married\";\"primary\";\"no\";1787;\"no\";\"no\";\"cellular\";19;\"oct\";79;1;-1;0;\"unknown\";\"no\"', u'33;\"services\";\"married\";\"secondary\";\"no\";4789;\"yes\";\"yes\";\"cellular\";11;\"may\";220;1;339;4;\"failure\";\"no\"', u'35;\"management\";\"single\";\"tertiary\";\"no\";1350;\"yes\";\"no\";\"cellular\";16;\"apr\";185;1;330;1;\"failure\";\"no\"', u'30;\"management\";\"married\";\"tertiary\";\"no\";1476;\"yes\";\"yes\";\"unknown\";3;\"jun\";199;4;-1;0;\"unknown\";\"no\"']\n"},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_806716070","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:16:11+0000","dateFinished":"2016-08-19T12:16:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13288"},{"title":"Data Cleaning Using Map and Filter","text":"%md\nIn the following cells, you create a DataFrame programmatically with three steps.\n\n1) Create an RDD of tuples  from the original _bankDataset_\n2) Create the _schema_ represented by a StructType matching the structure of tuples in the RDD created in the step 1.\n3) Apply the schema to the RDD via _createDataFrame_ method provided by _SQLContext_.\n<br>\nWell, lets create the _bankRDD_ from _bankDataset_. We use __map__ transformation to split each line of _bankDataset_ into fields using \";\" delimiter __map__ is a transformation that passes each dataset element through a function and returns a new RDD representing the results. Then, we use __filter__ to filter out the first row, which is the header row. Moreover, to create the dataframe, we just select age, job, marital, education and balance of each customer.\n<br>\nThe following cell shows the first 5 rows of the _bankRDD_","dateUpdated":"2016-08-19T12:16:11+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>In the following cells, you create a DataFrame programmatically with three steps.</p>\n<p>1) Create an RDD of tuples  from the original <em>bankDataset</em>\n<br  />2) Create the <em>schema</em> represented by a StructType matching the structure of tuples in the RDD created in the step 1.\n<br  />3) Apply the schema to the RDD via <em>createDataFrame</em> method provided by <em>SQLContext</em>.\n<br  /><br>\n<br  />Well, lets create the <em>bankRDD</em> from <em>bankDataset</em>. We use <strong>map</strong> transformation to split each line of <em>bankDataset</em> into fields using &ldquo;;&rdquo; delimiter <strong>map</strong> is a transformation that passes each dataset element through a function and returns a new RDD representing the results. Then, we use <strong>filter</strong> to filter out the first row, which is the header row. Moreover, to create the dataframe, we just select age, job, marital, education and balance of each customer.\n<br  /><br>\n<br  />The following cell shows the first 5 rows of the <em>bankRDD</em></p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>In the following cells, you create a DataFrame programmatically with three steps.</p>\n<p>1) Create an RDD of tuples  from the original <em>bankDataset</em>\n<br  />2) Create the <em>schema</em> represented by a StructType matching the structure of tuples in the RDD created in the step 1.\n<br  />3) Apply the schema to the RDD via <em>createDataFrame</em> method provided by <em>SQLContext</em>.\n<br  /><br>\n<br  />Well, lets create the <em>bankRDD</em> from <em>bankDataset</em>. We use <strong>map</strong> transformation to split each line of <em>bankDataset</em> into fields using &ldquo;;&rdquo; delimiter <strong>map</strong> is a transformation that passes each dataset element through a function and returns a new RDD representing the results. Then, we use <strong>filter</strong> to filter out the first row, which is the header row. Moreover, to create the dataframe, we just select age, job, marital, education and balance of each customer.\n<br  /><br>\n<br  />The following cell shows the first 5 rows of the <em>bankRDD</em></p>\n"},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_1275583311","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:16:13+0000","dateFinished":"2016-08-19T12:16:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13289"},{"text":"%pyspark\nbankRDD = bankDataset.map(lambda s: s.split(\";\")).filter(lambda s: s[0] != \"\\\"age\\\"\").map(lambda s:(int(s[0]), str(s[1]).replace(\"\\\"\", \"\"), str(s[2]).replace(\"\\\"\", \"\"), str(s[3]).replace(\"\\\"\", \"\"), int(s[5]) ))\nprint bankRDD.take(5)","dateUpdated":"2016-08-19T12:16:15+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/scala","editorHide":false,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(30, 'unemployed', 'married', 'primary', 1787), (33, 'services', 'married', 'secondary', 4789), (35, 'management', 'single', 'tertiary', 1350), (30, 'management', 'married', 'tertiary', 1476), (59, 'blue-collar', 'married', 'secondary', 0)]\n"}]},"result":{"code":"SUCCESS","type":"TEXT","msg":"[(30, 'unemployed', 'married', 'primary', 1787), (33, 'services', 'married', 'secondary', 4789), (35, 'management', 'single', 'tertiary', 1350), (30, 'management', 'married', 'tertiary', 1476), (59, 'blue-collar', 'married', 'secondary', 0)]\n"},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_1160420422","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:16:20+0000","dateFinished":"2016-08-19T12:16:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13290"},{"title":"Dataframe Schema","text":"%md\nWe created an RDD of touples from the original file, in the previous step; for example, a touple was exposed as (30, 'unemployed', 'married', 'primary', 1787). Now, you create a schema  by a _StructType_ matching the structure of tuples in the _bankRDD_. __StructType__ is the data type representing rows. A _StructType_ object comprises a list of _StructFields_.\nThen, apply the schema to the RDD via _createDataFrame_ method provided by _SQLContext_.\n\n","dateUpdated":"2016-08-19T12:16:20+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>We created an RDD of touples from the original file, in the previous step; for example, a touple was exposed as (30, 'unemployed', 'married', 'primary', 1787). Now, you create a schema  by a <em>StructType</em> matching the structure of tuples in the <em>bankRDD</em>. <strong>StructType</strong> is the data type representing rows. A <em>StructType</em> object comprises a list of <em>StructFields</em>.\n<br  />Then, apply the schema to the RDD via <em>createDataFrame</em> method provided by <em>SQLContext</em>.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>We created an RDD of touples from the original file, in the previous step; for example, a touple was exposed as (30, 'unemployed', 'married', 'primary', 1787). Now, you create a schema  by a <em>StructType</em> matching the structure of tuples in the <em>bankRDD</em>. <strong>StructType</strong> is the data type representing rows. A <em>StructType</em> object comprises a list of <em>StructFields</em>.\n<br  />Then, apply the schema to the RDD via <em>createDataFrame</em> method provided by <em>SQLContext</em>.</p>\n"},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_2124245762","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:16:22+0000","dateFinished":"2016-08-19T12:16:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13291"},{"text":"%pyspark\nbankSchema = StructType([StructField(\"age\", IntegerType(), False),StructField(\"job\", StringType(), False),StructField(\"marital\", StringType(), False),StructField(\"education\", StringType(), False),StructField(\"balance\", IntegerType(), False)])","dateUpdated":"2016-08-19T12:16:22+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/scala","results":[],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"result":{"code":"SUCCESS","type":"TEXT","msg":""},"apps":[],"jobName":"paragraph_1471607984266_-134622055","id":"20160819-115944_1133905388","dateCreated":"2016-08-19T11:59:44+0000","dateStarted":"2016-08-19T12:16:31+0000","dateFinished":"2016-08-19T12:16:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13292"},{"title":"Spark SQL ","text":"%md\nIn this step, we apply _schema_ to _bankRDD_ and create a _DataFrame_ using __Spark SQL__.\nSpark SQL supports operating on a variety of data sources through the DataFrame interface. The entry point into all relational functionality in Spark is the __SQLContext__ class. With a SQLContext, you can create DataFrames from an existing RDD.\nRunning following code, creates a DataFrame, i.e. __bankRDD__, and shows the first 10 rows of DataFrame.","dateUpdated":"2016-08-19T12:17:46+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/markdown","editorHide":false,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>In this step, we apply <em>schema</em> to <em>bankRDD</em> and create a <em>DataFrame</em> using <strong>Spark SQL</strong>.\n<br  />Spark SQL supports operating on a variety of data sources through the DataFrame interface. The entry point into all relational functionality in Spark is the <strong>SQLContext</strong> class. With a SQLContext, you can create DataFrames from an existing RDD.\n<br  />Running following code, creates a DataFrame, i.e. <strong>bankRDD</strong>, and shows the first 10 rows of DataFrame.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>In this step, we apply <em>schema</em> to <em>bankRDD</em> and create a <em>DataFrame</em> using <strong>Spark SQL</strong>.\n<br  />Spark SQL supports operating on a variety of data sources through the DataFrame interface. The entry point into all relational functionality in Spark is the <strong>SQLContext</strong> class. With a SQLContext, you can create DataFrames from an existing RDD.\n<br  />Running following code, creates a DataFrame, i.e. <strong>bankRDD</strong>, and shows the first 10 rows of DataFrame.</p>\n"},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_279880825","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:16:34+0000","dateFinished":"2016-08-19T12:16:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13293"},{"text":"%pyspark\nbankdf = spark.createDataFrame(bankRDD,bankSchema)\nbankdf.show(5)","dateUpdated":"2016-08-19T12:18:21+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","enabled":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+----------+-------+---------+-------+\n|age|       job|marital|education|balance|\n+---+----------+-------+---------+-------+\n| 30|unemployed|married|  primary|   1787|\n+---+----------+-------+---------+-------+\nonly showing top 1 row\n\n"}]},"result":{"code":"SUCCESS","type":"TEXT","msg":"+---+----------+-------+---------+-------+\n|age|       job|marital|education|balance|\n+---+----------+-------+---------+-------+\n| 30|unemployed|married|  primary|   1787|\n+---+----------+-------+---------+-------+\nonly showing top 1 row\n\n"},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_24625798","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:18:21+0000","dateFinished":"2016-08-19T12:16:48+0000","status":"ABORT","progressUpdateIntervalMs":500,"$$hashKey":"object:13294"},{"title":"Register DataFrame as a Temporary table","text":"%md\nRunning following code, registers a temporary table, __bank__. Registering a DataFrame as a table allows you to run SQL queries over its data.\n","dateUpdated":"2016-08-19T12:16:50+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/markdown","title":true,"editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Running following code, registers a temporary table, <strong>bank</strong>. Registering a DataFrame as a table allows you to run SQL queries over its data.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>Running following code, registers a temporary table, <strong>bank</strong>. Registering a DataFrame as a table allows you to run SQL queries over its data.</p>\n"},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_346520785","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:16:53+0000","dateFinished":"2016-08-19T12:16:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13295"},{"text":"%pyspark\nbankdf.registerTempTable(\"bank\")","dateUpdated":"2016-08-19T12:16:56+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/scala","results":[],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"result":{"code":"SUCCESS","type":"TEXT","msg":""},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_2029791086","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:17:00+0000","dateFinished":"2016-08-19T12:17:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13296"},{"title":"Data Retrieval","text":"%md\nNow we can easily query __Bank__ table with SQL commands. To write an SQL command, you should use __%sql__.\nSuppose we want to see 5 rows from __bank__. To do this, run:","dateUpdated":"2016-08-19T12:17:04+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/markdown","title":true,"editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Now we can easily query <strong>Bank</strong> table with SQL commands. To write an SQL command, you should use <strong>%sql</strong>.\n<br  />Suppose we want to see 5 rows from <strong>bank</strong>. To do this, run:</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>Now we can easily query <strong>Bank</strong> table with SQL commands. To write an SQL command, you should use <strong>%sql</strong>.\n<br  />Suppose we want to see 5 rows from <strong>bank</strong>. To do this, run:</p>\n"},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_487905636","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:17:06+0000","dateFinished":"2016-08-19T12:17:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13297"},{"text":"%sql\nselect * from bank LIMIT 5","dateUpdated":"2019-06-25T11:12:04+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/sql","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"age":"string","job":"string","marital":"string","education":"string","balance":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tjob\tmarital\teducation\tbalance\n30\tunemployed\tmarried\tprimary\t1787\n33\tservices\tmarried\tsecondary\t4789\n35\tmanagement\tsingle\ttertiary\t1350\n30\tmanagement\tmarried\ttertiary\t1476\n59\tblue-collar\tmarried\tsecondary\t0\n"}]},"result":{"code":"SUCCESS","type":"TABLE","msg":"age\tjob\tmarital\teducation\tbalance\n30\tunemployed\tmarried\tprimary\t1787\n33\tservices\tmarried\tsecondary\t4789\n35\tmanagement\tsingle\ttertiary\t1350\n30\tmanagement\tmarried\ttertiary\t1476\n59\tblue-collar\tmarried\tsecondary\t0\n","comment":"","msgTable":[[{"key":"job","value":"30"},{"key":"job","value":"unemployed"},{"key":"job","value":"married"},{"key":"job","value":"primary"},{"key":"job","value":"1787"}],[{"key":"marital","value":"33"},{"key":"marital","value":"services"},{"key":"marital","value":"married"},{"key":"marital","value":"secondary"},{"key":"marital","value":"4789"}],[{"key":"education","value":"35"},{"key":"education","value":"management"},{"key":"education","value":"single"},{"key":"education","value":"tertiary"},{"key":"education","value":"1350"}],[{"key":"balance","value":"30"},{"key":"balance","value":"management"},{"key":"balance","value":"married"},{"key":"balance","value":"tertiary"},{"key":"balance","value":"1476"}],[{"value":"59"},{"value":"blue-collar"},{"value":"married"},{"value":"secondary"},{"value":"0"}]],"columnNames":[{"name":"age","index":0,"aggr":"sum"},{"name":"job","index":1,"aggr":"sum"},{"name":"marital","index":2,"aggr":"sum"},{"name":"education","index":3,"aggr":"sum"},{"name":"balance","index":4,"aggr":"sum"}],"rows":[["30","unemployed","married","primary","1787"],["33","services","married","secondary","4789"],["35","management","single","tertiary","1350"],["30","management","married","tertiary","1476"],["59","blue-collar","married","secondary","0"]]},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_583556018","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:17:12+0000","dateFinished":"2016-08-19T12:17:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13298"},{"title":"Data Visualization","text":"%md\nSome basic charts are already included in Zeppelin. Visualizations are not limited to SparkSQL's query, any output from any language backend can be recognized and visualized.","dateUpdated":"2016-08-19T12:17:19+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false,"title":true,"editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Some basic charts are already included in Zeppelin. Visualizations are not limited to SparkSQL's query, any output from any language backend can be recognized and visualized.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>Some basic charts are already included in Zeppelin. Visualizations are not limited to SparkSQL's query, any output from any language backend can be recognized and visualized.</p>\n"},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_229042894","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:17:22+0000","dateFinished":"2016-08-19T12:17:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13299"},{"text":"%sql \nselect age, count(1) value\nfrom bank \nwhere age < 30 \ngroup by age \norder by age","dateUpdated":"2019-06-25T11:12:04+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","enabled":true,"results":[{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false,"keys":[{"name":"age","index":0,"aggr":"sum"}],"values":[{"name":"value","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"age","index":0,"aggr":"sum"},"yAxis":{"name":"value","index":1,"aggr":"sum"}},"setting":{"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tvalue\n19\t4\n20\t3\n21\t7\n22\t9\n23\t20\n24\t24\n25\t44\n26\t77\n27\t94\n28\t103\n29\t97\n"}]},"result":{"code":"SUCCESS","type":"TABLE","msg":"age\tvalue\n19\t4\n20\t3\n21\t7\n22\t9\n23\t20\n24\t24\n25\t44\n26\t77\n27\t94\n28\t103\n29\t97\n","comment":"","msgTable":[[{"key":"value","value":"19"},{"key":"value","value":"4"}],[{"value":"20"},{"value":"3"}],[{"value":"21"},{"value":"7"}],[{"value":"22"},{"value":"9"}],[{"value":"23"},{"value":"20"}],[{"value":"24"},{"value":"24"}],[{"value":"25"},{"value":"44"}],[{"value":"26"},{"value":"77"}],[{"value":"27"},{"value":"94"}],[{"value":"28"},{"value":"103"}],[{"value":"29"},{"value":"97"}]],"columnNames":[{"name":"age","index":0,"aggr":"sum"},{"name":"value","index":1,"aggr":"sum"}],"rows":[["19","4"],["20","3"],["21","7"],["22","9"],["23","20"],["24","24"],["25","44"],["26","77"],["27","94"],["28","103"],["29","97"]]},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_343440195","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:17:26+0000","dateFinished":"2016-08-19T12:17:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13300"},{"text":"%md\nWith simple drag and drop Zeppelin aggeregates the values and display them in pivot chart. You can easily create chart with multiple aggregated values including sum, count, average, min, max. Click on __setting__ to see the keys, Groups and Values.","dateUpdated":"2016-08-19T12:17:35+0000","config":{"colWidth":12,"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>With simple drag and drop Zeppelin aggeregates the values and display them in pivot chart. You can easily create chart with multiple aggregated values including sum, count, average, min, max. Click on <strong>setting</strong> to see the keys, Groups and Values.</p>\n"}]},"result":{"code":"SUCCESS","type":"HTML","msg":"<p>With simple drag and drop Zeppelin aggeregates the values and display them in pivot chart. You can easily create chart with multiple aggregated values including sum, count, average, min, max. Click on <strong>setting</strong> to see the keys, Groups and Values.</p>\n"},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_798777169","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:17:35+0000","dateFinished":"2016-08-19T12:17:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13301"},{"text":"%sql\nselect age, education, sum(balance) bal from bank\ngroup by age, education","dateUpdated":"2019-06-25T11:12:08+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","enabled":true,"results":[{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":true,"keys":[{"name":"age","index":0,"aggr":"sum"}],"values":[{"name":"bal","index":2,"aggr":"sum"}],"groups":[{"name":"education","index":1,"aggr":"sum"}],"scatter":{"yAxis":{"name":"bal","index":2,"aggr":"sum"},"xAxis":{"name":"age","index":0,"aggr":"sum"},"group":{"name":"education","index":1,"aggr":"sum"}},"setting":{"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{}}}],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\teducation\tbal\n29\tprimary\t1048\n22\tprimary\t3472\n69\ttertiary\t2617\n68\tsecondary\t23506\n29\tsecondary\t63447\n62\ttertiary\t1865\n69\tunknown\t426\n49\tsecondary\t101703\n55\ttertiary\t28689\n71\tsecondary\t2850\n32\tsecondary\t115051\n52\ttertiary\t18538\n67\tprimary\t2301\n65\tunknown\t5317\n43\tunknown\t11397\n33\tprimary\t24768\n57\tunknown\t6726\n71\ttertiary\t15217\n57\tprimary\t33000\n42\tsecondary\t83363\n54\tsecondary\t22068\n65\tprimary\t4512\n26\tprimary\t7726\n56\tunknown\t5632\n31\tunknown\t635\n43\tsecondary\t82498\n34\tsecondary\t112504\n55\tunknown\t4056\n47\tsecondary\t78778\n44\tunknown\t1174\n45\tprimary\t44588\n86\tsecondary\t1503\n31\tsecondary\t104499\n42\tprimary\t40882\n28\tprimary\t1961\n24\tunknown\t3729\n58\tprimary\t48625\n35\tprimary\t13227\n47\ttertiary\t49685\n50\tprimary\t42974\n73\tprimary\t2617\n40\tunknown\t9716\n42\ttertiary\t93304\n50\ttertiary\t43378\n21\tsecondary\t12283\n25\ttertiary\t27302\n64\tprimary\t811\n67\tsecondary\t16353\n23\tsecondary\t21128\n56\tprimary\t16366\n55\tprimary\t40416\n28\tsecondary\t64651\n52\tsecondary\t36593\n54\tprimary\t18305\n41\tsecondary\t91940\n40\tsecondary\t98662\n33\tunknown\t24316\n23\ttertiary\t1998\n60\tunknown\t15024\n77\tprimary\t1360\n59\tunknown\t8646\n53\tsecondary\t62148\n27\tsecondary\t48959\n38\tunknown\t3638\n22\tsecondary\t7178\n26\tsecondary\t34353\n60\tsecondary\t19437\n79\tprimary\t8985\n29\ttertiary\t54314\n51\ttertiary\t31479\n69\tprimary\t858\n53\ttertiary\t45412\n28\tunknown\t1390\n40\ttertiary\t75443\n32\ttertiary\t141981\n49\ttertiary\t27788\n32\tunknown\t21538\n53\tprimary\t37193\n19\tunknown\t1169\n44\ttertiary\t72648\n58\tsecondary\t45864\n53\tunknown\t4548\n38\tprimary\t17406\n27\ttertiary\t25774\n45\tunknown\t12395\n59\tsecondary\t46515\n48\ttertiary\t56018\n83\tsecondary\t0\n36\tsecondary\t86138\n64\ttertiary\t2415\n50\tunknown\t9220\n36\tunknown\t3541\n37\ttertiary\t84184\n46\tunknown\t9570\n33\ttertiary\t105706\n54\ttertiary\t63140\n40\tprimary\t14909\n66\ttertiary\t13910\n87\tprimary\t230\n50\tsecondary\t70579\n78\ttertiary\t226\n36\ttertiary\t130534\n66\tprimary\t953\n25\tsecondary\t17283\n70\tprimary\t8313\n44\tprimary\t17564\n47\tunknown\t7383\n71\tprimary\t4657\n73\tunknown\t519\n22\tunknown\t596\n77\tsecondary\t610\n57\tsecondary\t72359\n35\tsecondary\t103576\n27\tunknown\t3255\n84\tprimary\t639\n75\ttertiary\t3810\n72\tsecondary\t4130\n45\ttertiary\t27906\n73\tsecondary\t19\n60\tprimary\t90637\n19\tsecondary\t302\n49\tprimary\t45604\n72\tprimary\t5974\n30\ttertiary\t103494\n26\ttertiary\t18640\n24\tsecondary\t11219\n25\tunknown\t10788\n22\ttertiary\t1852\n44\tsecondary\t101452\n76\tprimary\t2676\n39\tprimary\t25197\n27\tprimary\t2079\n51\tunknown\t42195\n64\tunknown\t2923\n31\ttertiary\t119916\n34\ttertiary\t132905\n77\ttertiary\t12461\n63\tprimary\t9128\n79\tsecondary\t4738\n56\ttertiary\t66399\n48\tprimary\t38132\n35\ttertiary\t97035\n41\tunknown\t7318\n78\tsecondary\t499\n60\ttertiary\t14237\n69\tsecondary\t745\n58\ttertiary\t47836\n30\tsecondary\t57899\n52\tprimary\t7776\n75\tprimary\t852\n58\tunknown\t6857\n21\tunknown\t137\n33\tsecondary\t132657\n61\ttertiary\t13623\n55\tsecondary\t38884\n70\ttertiary\t15834\n31\tprimary\t31358\n34\tprimary\t6941\n24\ttertiary\t172\n29\tunknown\t3593\n37\tsecondary\t99404\n28\ttertiary\t37583\n43\ttertiary\t80147\n38\tsecondary\t95157\n46\ttertiary\t28075\n32\tprimary\t2897\n80\tprimary\t8031\n67\tunknown\t1392\n48\tsecondary\t60707\n75\tsecondary\t37617\n51\tsecondary\t36140\n78\tprimary\t229\n42\tunknown\t9794\n81\tsecondary\t1\n38\ttertiary\t157119\n39\tunknown\t1169\n66\tsecondary\t14962\n61\tunknown\t4629\n83\tprimary\t1522\n41\ttertiary\t81432\n67\ttertiary\t701\n49\tunknown\t3109\n54\tunknown\t14110\n25\tprimary\t-810\n37\tprimary\t42493\n64\tsecondary\t1574\n30\tprimary\t5562\n48\tunknown\t11852\n63\ttertiary\t133\n41\tprimary\t22592\n37\tunknown\t9610\n47\tprimary\t11363\n39\tsecondary\t66947\n34\tunknown\t4415\n23\tunknown\t817\n20\tsecondary\t1984\n59\tprimary\t25054\n56\tsecondary\t68493\n74\tsecondary\t5935\n59\ttertiary\t32141\n46\tsecondary\t64886\n23\tprimary\t18416\n70\tsecondary\t11445\n43\tprimary\t33859\n57\ttertiary\t39487\n51\tprimary\t29286\n80\tsecondary\t17070\n36\tprimary\t10443\n61\tsecondary\t17735\n19\tprimary\t103\n52\tunknown\t4370\n61\tprimary\t2533\n46\tprimary\t16323\n24\tprimary\t111\n39\ttertiary\t50319\n79\tunknown\t2628\n63\tsecondary\t9030\n45\tsecondary\t48096\n62\tsecondary\t1748\n35\tunknown\t871\n"}]},"result":{"code":"SUCCESS","type":"TABLE","msg":"age\teducation\tbal\n29\tprimary\t1048\n22\tprimary\t3472\n69\ttertiary\t2617\n68\tsecondary\t23506\n29\tsecondary\t63447\n62\ttertiary\t1865\n69\tunknown\t426\n49\tsecondary\t101703\n55\ttertiary\t28689\n71\tsecondary\t2850\n32\tsecondary\t115051\n52\ttertiary\t18538\n67\tprimary\t2301\n65\tunknown\t5317\n43\tunknown\t11397\n33\tprimary\t24768\n57\tunknown\t6726\n71\ttertiary\t15217\n57\tprimary\t33000\n42\tsecondary\t83363\n54\tsecondary\t22068\n65\tprimary\t4512\n26\tprimary\t7726\n56\tunknown\t5632\n31\tunknown\t635\n43\tsecondary\t82498\n34\tsecondary\t112504\n55\tunknown\t4056\n47\tsecondary\t78778\n44\tunknown\t1174\n45\tprimary\t44588\n86\tsecondary\t1503\n31\tsecondary\t104499\n42\tprimary\t40882\n28\tprimary\t1961\n24\tunknown\t3729\n58\tprimary\t48625\n35\tprimary\t13227\n47\ttertiary\t49685\n50\tprimary\t42974\n73\tprimary\t2617\n40\tunknown\t9716\n42\ttertiary\t93304\n50\ttertiary\t43378\n21\tsecondary\t12283\n25\ttertiary\t27302\n64\tprimary\t811\n67\tsecondary\t16353\n23\tsecondary\t21128\n56\tprimary\t16366\n55\tprimary\t40416\n28\tsecondary\t64651\n52\tsecondary\t36593\n54\tprimary\t18305\n41\tsecondary\t91940\n40\tsecondary\t98662\n33\tunknown\t24316\n23\ttertiary\t1998\n60\tunknown\t15024\n77\tprimary\t1360\n59\tunknown\t8646\n53\tsecondary\t62148\n27\tsecondary\t48959\n38\tunknown\t3638\n22\tsecondary\t7178\n26\tsecondary\t34353\n60\tsecondary\t19437\n79\tprimary\t8985\n29\ttertiary\t54314\n51\ttertiary\t31479\n69\tprimary\t858\n53\ttertiary\t45412\n28\tunknown\t1390\n40\ttertiary\t75443\n32\ttertiary\t141981\n49\ttertiary\t27788\n32\tunknown\t21538\n53\tprimary\t37193\n19\tunknown\t1169\n44\ttertiary\t72648\n58\tsecondary\t45864\n53\tunknown\t4548\n38\tprimary\t17406\n27\ttertiary\t25774\n45\tunknown\t12395\n59\tsecondary\t46515\n48\ttertiary\t56018\n83\tsecondary\t0\n36\tsecondary\t86138\n64\ttertiary\t2415\n50\tunknown\t9220\n36\tunknown\t3541\n37\ttertiary\t84184\n46\tunknown\t9570\n33\ttertiary\t105706\n54\ttertiary\t63140\n40\tprimary\t14909\n66\ttertiary\t13910\n87\tprimary\t230\n50\tsecondary\t70579\n78\ttertiary\t226\n36\ttertiary\t130534\n66\tprimary\t953\n25\tsecondary\t17283\n70\tprimary\t8313\n44\tprimary\t17564\n47\tunknown\t7383\n71\tprimary\t4657\n73\tunknown\t519\n22\tunknown\t596\n77\tsecondary\t610\n57\tsecondary\t72359\n35\tsecondary\t103576\n27\tunknown\t3255\n84\tprimary\t639\n75\ttertiary\t3810\n72\tsecondary\t4130\n45\ttertiary\t27906\n73\tsecondary\t19\n60\tprimary\t90637\n19\tsecondary\t302\n49\tprimary\t45604\n72\tprimary\t5974\n30\ttertiary\t103494\n26\ttertiary\t18640\n24\tsecondary\t11219\n25\tunknown\t10788\n22\ttertiary\t1852\n44\tsecondary\t101452\n76\tprimary\t2676\n39\tprimary\t25197\n27\tprimary\t2079\n51\tunknown\t42195\n64\tunknown\t2923\n31\ttertiary\t119916\n34\ttertiary\t132905\n77\ttertiary\t12461\n63\tprimary\t9128\n79\tsecondary\t4738\n56\ttertiary\t66399\n48\tprimary\t38132\n35\ttertiary\t97035\n41\tunknown\t7318\n78\tsecondary\t499\n60\ttertiary\t14237\n69\tsecondary\t745\n58\ttertiary\t47836\n30\tsecondary\t57899\n52\tprimary\t7776\n75\tprimary\t852\n58\tunknown\t6857\n21\tunknown\t137\n33\tsecondary\t132657\n61\ttertiary\t13623\n55\tsecondary\t38884\n70\ttertiary\t15834\n31\tprimary\t31358\n34\tprimary\t6941\n24\ttertiary\t172\n29\tunknown\t3593\n37\tsecondary\t99404\n28\ttertiary\t37583\n43\ttertiary\t80147\n38\tsecondary\t95157\n46\ttertiary\t28075\n32\tprimary\t2897\n80\tprimary\t8031\n67\tunknown\t1392\n48\tsecondary\t60707\n75\tsecondary\t37617\n51\tsecondary\t36140\n78\tprimary\t229\n42\tunknown\t9794\n81\tsecondary\t1\n38\ttertiary\t157119\n39\tunknown\t1169\n66\tsecondary\t14962\n61\tunknown\t4629\n83\tprimary\t1522\n41\ttertiary\t81432\n67\ttertiary\t701\n49\tunknown\t3109\n54\tunknown\t14110\n25\tprimary\t-810\n37\tprimary\t42493\n64\tsecondary\t1574\n30\tprimary\t5562\n48\tunknown\t11852\n63\ttertiary\t133\n41\tprimary\t22592\n37\tunknown\t9610\n47\tprimary\t11363\n39\tsecondary\t66947\n34\tunknown\t4415\n23\tunknown\t817\n20\tsecondary\t1984\n59\tprimary\t25054\n56\tsecondary\t68493\n74\tsecondary\t5935\n59\ttertiary\t32141\n46\tsecondary\t64886\n23\tprimary\t18416\n70\tsecondary\t11445\n43\tprimary\t33859\n57\ttertiary\t39487\n51\tprimary\t29286\n80\tsecondary\t17070\n36\tprimary\t10443\n61\tsecondary\t17735\n19\tprimary\t103\n52\tunknown\t4370\n61\tprimary\t2533\n46\tprimary\t16323\n24\tprimary\t111\n39\ttertiary\t50319\n79\tunknown\t2628\n63\tsecondary\t9030\n45\tsecondary\t48096\n62\tsecondary\t1748\n35\tunknown\t871\n","comment":"","msgTable":[[{"key":"education","value":"29"},{"key":"education","value":"primary"},{"key":"education","value":"1048"}],[{"key":"bal","value":"22"},{"key":"bal","value":"primary"},{"key":"bal","value":"3472"}],[{"value":"69"},{"value":"tertiary"},{"value":"2617"}],[{"value":"68"},{"value":"secondary"},{"value":"23506"}],[{"value":"29"},{"value":"secondary"},{"value":"63447"}],[{"value":"62"},{"value":"tertiary"},{"value":"1865"}],[{"value":"69"},{"value":"unknown"},{"value":"426"}],[{"value":"49"},{"value":"secondary"},{"value":"101703"}],[{"value":"55"},{"value":"tertiary"},{"value":"28689"}],[{"value":"71"},{"value":"secondary"},{"value":"2850"}],[{"value":"32"},{"value":"secondary"},{"value":"115051"}],[{"value":"52"},{"value":"tertiary"},{"value":"18538"}],[{"value":"67"},{"value":"primary"},{"value":"2301"}],[{"value":"65"},{"value":"unknown"},{"value":"5317"}],[{"value":"43"},{"value":"unknown"},{"value":"11397"}],[{"value":"33"},{"value":"primary"},{"value":"24768"}],[{"value":"57"},{"value":"unknown"},{"value":"6726"}],[{"value":"71"},{"value":"tertiary"},{"value":"15217"}],[{"value":"57"},{"value":"primary"},{"value":"33000"}],[{"value":"42"},{"value":"secondary"},{"value":"83363"}],[{"value":"54"},{"value":"secondary"},{"value":"22068"}],[{"value":"65"},{"value":"primary"},{"value":"4512"}],[{"value":"26"},{"value":"primary"},{"value":"7726"}],[{"value":"56"},{"value":"unknown"},{"value":"5632"}],[{"value":"31"},{"value":"unknown"},{"value":"635"}],[{"value":"43"},{"value":"secondary"},{"value":"82498"}],[{"value":"34"},{"value":"secondary"},{"value":"112504"}],[{"value":"55"},{"value":"unknown"},{"value":"4056"}],[{"value":"47"},{"value":"secondary"},{"value":"78778"}],[{"value":"44"},{"value":"unknown"},{"value":"1174"}],[{"value":"45"},{"value":"primary"},{"value":"44588"}],[{"value":"86"},{"value":"secondary"},{"value":"1503"}],[{"value":"31"},{"value":"secondary"},{"value":"104499"}],[{"value":"42"},{"value":"primary"},{"value":"40882"}],[{"value":"28"},{"value":"primary"},{"value":"1961"}],[{"value":"24"},{"value":"unknown"},{"value":"3729"}],[{"value":"58"},{"value":"primary"},{"value":"48625"}],[{"value":"35"},{"value":"primary"},{"value":"13227"}],[{"value":"47"},{"value":"tertiary"},{"value":"49685"}],[{"value":"50"},{"value":"primary"},{"value":"42974"}],[{"value":"73"},{"value":"primary"},{"value":"2617"}],[{"value":"40"},{"value":"unknown"},{"value":"9716"}],[{"value":"42"},{"value":"tertiary"},{"value":"93304"}],[{"value":"50"},{"value":"tertiary"},{"value":"43378"}],[{"value":"21"},{"value":"secondary"},{"value":"12283"}],[{"value":"25"},{"value":"tertiary"},{"value":"27302"}],[{"value":"64"},{"value":"primary"},{"value":"811"}],[{"value":"67"},{"value":"secondary"},{"value":"16353"}],[{"value":"23"},{"value":"secondary"},{"value":"21128"}],[{"value":"56"},{"value":"primary"},{"value":"16366"}],[{"value":"55"},{"value":"primary"},{"value":"40416"}],[{"value":"28"},{"value":"secondary"},{"value":"64651"}],[{"value":"52"},{"value":"secondary"},{"value":"36593"}],[{"value":"54"},{"value":"primary"},{"value":"18305"}],[{"value":"41"},{"value":"secondary"},{"value":"91940"}],[{"value":"40"},{"value":"secondary"},{"value":"98662"}],[{"value":"33"},{"value":"unknown"},{"value":"24316"}],[{"value":"23"},{"value":"tertiary"},{"value":"1998"}],[{"value":"60"},{"value":"unknown"},{"value":"15024"}],[{"value":"77"},{"value":"primary"},{"value":"1360"}],[{"value":"59"},{"value":"unknown"},{"value":"8646"}],[{"value":"53"},{"value":"secondary"},{"value":"62148"}],[{"value":"27"},{"value":"secondary"},{"value":"48959"}],[{"value":"38"},{"value":"unknown"},{"value":"3638"}],[{"value":"22"},{"value":"secondary"},{"value":"7178"}],[{"value":"26"},{"value":"secondary"},{"value":"34353"}],[{"value":"60"},{"value":"secondary"},{"value":"19437"}],[{"value":"79"},{"value":"primary"},{"value":"8985"}],[{"value":"29"},{"value":"tertiary"},{"value":"54314"}],[{"value":"51"},{"value":"tertiary"},{"value":"31479"}],[{"value":"69"},{"value":"primary"},{"value":"858"}],[{"value":"53"},{"value":"tertiary"},{"value":"45412"}],[{"value":"28"},{"value":"unknown"},{"value":"1390"}],[{"value":"40"},{"value":"tertiary"},{"value":"75443"}],[{"value":"32"},{"value":"tertiary"},{"value":"141981"}],[{"value":"49"},{"value":"tertiary"},{"value":"27788"}],[{"value":"32"},{"value":"unknown"},{"value":"21538"}],[{"value":"53"},{"value":"primary"},{"value":"37193"}],[{"value":"19"},{"value":"unknown"},{"value":"1169"}],[{"value":"44"},{"value":"tertiary"},{"value":"72648"}],[{"value":"58"},{"value":"secondary"},{"value":"45864"}],[{"value":"53"},{"value":"unknown"},{"value":"4548"}],[{"value":"38"},{"value":"primary"},{"value":"17406"}],[{"value":"27"},{"value":"tertiary"},{"value":"25774"}],[{"value":"45"},{"value":"unknown"},{"value":"12395"}],[{"value":"59"},{"value":"secondary"},{"value":"46515"}],[{"value":"48"},{"value":"tertiary"},{"value":"56018"}],[{"value":"83"},{"value":"secondary"},{"value":"0"}],[{"value":"36"},{"value":"secondary"},{"value":"86138"}],[{"value":"64"},{"value":"tertiary"},{"value":"2415"}],[{"value":"50"},{"value":"unknown"},{"value":"9220"}],[{"value":"36"},{"value":"unknown"},{"value":"3541"}],[{"value":"37"},{"value":"tertiary"},{"value":"84184"}],[{"value":"46"},{"value":"unknown"},{"value":"9570"}],[{"value":"33"},{"value":"tertiary"},{"value":"105706"}],[{"value":"54"},{"value":"tertiary"},{"value":"63140"}],[{"value":"40"},{"value":"primary"},{"value":"14909"}],[{"value":"66"},{"value":"tertiary"},{"value":"13910"}],[{"value":"87"},{"value":"primary"},{"value":"230"}],[{"value":"50"},{"value":"secondary"},{"value":"70579"}],[{"value":"78"},{"value":"tertiary"},{"value":"226"}],[{"value":"36"},{"value":"tertiary"},{"value":"130534"}],[{"value":"66"},{"value":"primary"},{"value":"953"}],[{"value":"25"},{"value":"secondary"},{"value":"17283"}],[{"value":"70"},{"value":"primary"},{"value":"8313"}],[{"value":"44"},{"value":"primary"},{"value":"17564"}],[{"value":"47"},{"value":"unknown"},{"value":"7383"}],[{"value":"71"},{"value":"primary"},{"value":"4657"}],[{"value":"73"},{"value":"unknown"},{"value":"519"}],[{"value":"22"},{"value":"unknown"},{"value":"596"}],[{"value":"77"},{"value":"secondary"},{"value":"610"}],[{"value":"57"},{"value":"secondary"},{"value":"72359"}],[{"value":"35"},{"value":"secondary"},{"value":"103576"}],[{"value":"27"},{"value":"unknown"},{"value":"3255"}],[{"value":"84"},{"value":"primary"},{"value":"639"}],[{"value":"75"},{"value":"tertiary"},{"value":"3810"}],[{"value":"72"},{"value":"secondary"},{"value":"4130"}],[{"value":"45"},{"value":"tertiary"},{"value":"27906"}],[{"value":"73"},{"value":"secondary"},{"value":"19"}],[{"value":"60"},{"value":"primary"},{"value":"90637"}],[{"value":"19"},{"value":"secondary"},{"value":"302"}],[{"value":"49"},{"value":"primary"},{"value":"45604"}],[{"value":"72"},{"value":"primary"},{"value":"5974"}],[{"value":"30"},{"value":"tertiary"},{"value":"103494"}],[{"value":"26"},{"value":"tertiary"},{"value":"18640"}],[{"value":"24"},{"value":"secondary"},{"value":"11219"}],[{"value":"25"},{"value":"unknown"},{"value":"10788"}],[{"value":"22"},{"value":"tertiary"},{"value":"1852"}],[{"value":"44"},{"value":"secondary"},{"value":"101452"}],[{"value":"76"},{"value":"primary"},{"value":"2676"}],[{"value":"39"},{"value":"primary"},{"value":"25197"}],[{"value":"27"},{"value":"primary"},{"value":"2079"}],[{"value":"51"},{"value":"unknown"},{"value":"42195"}],[{"value":"64"},{"value":"unknown"},{"value":"2923"}],[{"value":"31"},{"value":"tertiary"},{"value":"119916"}],[{"value":"34"},{"value":"tertiary"},{"value":"132905"}],[{"value":"77"},{"value":"tertiary"},{"value":"12461"}],[{"value":"63"},{"value":"primary"},{"value":"9128"}],[{"value":"79"},{"value":"secondary"},{"value":"4738"}],[{"value":"56"},{"value":"tertiary"},{"value":"66399"}],[{"value":"48"},{"value":"primary"},{"value":"38132"}],[{"value":"35"},{"value":"tertiary"},{"value":"97035"}],[{"value":"41"},{"value":"unknown"},{"value":"7318"}],[{"value":"78"},{"value":"secondary"},{"value":"499"}],[{"value":"60"},{"value":"tertiary"},{"value":"14237"}],[{"value":"69"},{"value":"secondary"},{"value":"745"}],[{"value":"58"},{"value":"tertiary"},{"value":"47836"}],[{"value":"30"},{"value":"secondary"},{"value":"57899"}],[{"value":"52"},{"value":"primary"},{"value":"7776"}],[{"value":"75"},{"value":"primary"},{"value":"852"}],[{"value":"58"},{"value":"unknown"},{"value":"6857"}],[{"value":"21"},{"value":"unknown"},{"value":"137"}],[{"value":"33"},{"value":"secondary"},{"value":"132657"}],[{"value":"61"},{"value":"tertiary"},{"value":"13623"}],[{"value":"55"},{"value":"secondary"},{"value":"38884"}],[{"value":"70"},{"value":"tertiary"},{"value":"15834"}],[{"value":"31"},{"value":"primary"},{"value":"31358"}],[{"value":"34"},{"value":"primary"},{"value":"6941"}],[{"value":"24"},{"value":"tertiary"},{"value":"172"}],[{"value":"29"},{"value":"unknown"},{"value":"3593"}],[{"value":"37"},{"value":"secondary"},{"value":"99404"}],[{"value":"28"},{"value":"tertiary"},{"value":"37583"}],[{"value":"43"},{"value":"tertiary"},{"value":"80147"}],[{"value":"38"},{"value":"secondary"},{"value":"95157"}],[{"value":"46"},{"value":"tertiary"},{"value":"28075"}],[{"value":"32"},{"value":"primary"},{"value":"2897"}],[{"value":"80"},{"value":"primary"},{"value":"8031"}],[{"value":"67"},{"value":"unknown"},{"value":"1392"}],[{"value":"48"},{"value":"secondary"},{"value":"60707"}],[{"value":"75"},{"value":"secondary"},{"value":"37617"}],[{"value":"51"},{"value":"secondary"},{"value":"36140"}],[{"value":"78"},{"value":"primary"},{"value":"229"}],[{"value":"42"},{"value":"unknown"},{"value":"9794"}],[{"value":"81"},{"value":"secondary"},{"value":"1"}],[{"value":"38"},{"value":"tertiary"},{"value":"157119"}],[{"value":"39"},{"value":"unknown"},{"value":"1169"}],[{"value":"66"},{"value":"secondary"},{"value":"14962"}],[{"value":"61"},{"value":"unknown"},{"value":"4629"}],[{"value":"83"},{"value":"primary"},{"value":"1522"}],[{"value":"41"},{"value":"tertiary"},{"value":"81432"}],[{"value":"67"},{"value":"tertiary"},{"value":"701"}],[{"value":"49"},{"value":"unknown"},{"value":"3109"}],[{"value":"54"},{"value":"unknown"},{"value":"14110"}],[{"value":"25"},{"value":"primary"},{"value":"-810"}],[{"value":"37"},{"value":"primary"},{"value":"42493"}],[{"value":"64"},{"value":"secondary"},{"value":"1574"}],[{"value":"30"},{"value":"primary"},{"value":"5562"}],[{"value":"48"},{"value":"unknown"},{"value":"11852"}],[{"value":"63"},{"value":"tertiary"},{"value":"133"}],[{"value":"41"},{"value":"primary"},{"value":"22592"}],[{"value":"37"},{"value":"unknown"},{"value":"9610"}],[{"value":"47"},{"value":"primary"},{"value":"11363"}],[{"value":"39"},{"value":"secondary"},{"value":"66947"}],[{"value":"34"},{"value":"unknown"},{"value":"4415"}],[{"value":"23"},{"value":"unknown"},{"value":"817"}],[{"value":"20"},{"value":"secondary"},{"value":"1984"}],[{"value":"59"},{"value":"primary"},{"value":"25054"}],[{"value":"56"},{"value":"secondary"},{"value":"68493"}],[{"value":"74"},{"value":"secondary"},{"value":"5935"}],[{"value":"59"},{"value":"tertiary"},{"value":"32141"}],[{"value":"46"},{"value":"secondary"},{"value":"64886"}],[{"value":"23"},{"value":"primary"},{"value":"18416"}],[{"value":"70"},{"value":"secondary"},{"value":"11445"}],[{"value":"43"},{"value":"primary"},{"value":"33859"}],[{"value":"57"},{"value":"tertiary"},{"value":"39487"}],[{"value":"51"},{"value":"primary"},{"value":"29286"}],[{"value":"80"},{"value":"secondary"},{"value":"17070"}],[{"value":"36"},{"value":"primary"},{"value":"10443"}],[{"value":"61"},{"value":"secondary"},{"value":"17735"}],[{"value":"19"},{"value":"primary"},{"value":"103"}],[{"value":"52"},{"value":"unknown"},{"value":"4370"}],[{"value":"61"},{"value":"primary"},{"value":"2533"}],[{"value":"46"},{"value":"primary"},{"value":"16323"}],[{"value":"24"},{"value":"primary"},{"value":"111"}],[{"value":"39"},{"value":"tertiary"},{"value":"50319"}],[{"value":"79"},{"value":"unknown"},{"value":"2628"}],[{"value":"63"},{"value":"secondary"},{"value":"9030"}],[{"value":"45"},{"value":"secondary"},{"value":"48096"}],[{"value":"62"},{"value":"secondary"},{"value":"1748"}],[{"value":"35"},{"value":"unknown"},{"value":"871"}]],"columnNames":[{"name":"age","index":0,"aggr":"sum","$$hashKey":"object:4066"},{"name":"education","index":1,"aggr":"sum","$$hashKey":"object:4067"},{"name":"bal","index":2,"aggr":"sum","$$hashKey":"object:4068"}],"rows":[["29","primary","1048"],["22","primary","3472"],["69","tertiary","2617"],["68","secondary","23506"],["29","secondary","63447"],["62","tertiary","1865"],["69","unknown","426"],["49","secondary","101703"],["55","tertiary","28689"],["71","secondary","2850"],["32","secondary","115051"],["52","tertiary","18538"],["67","primary","2301"],["65","unknown","5317"],["43","unknown","11397"],["33","primary","24768"],["57","unknown","6726"],["71","tertiary","15217"],["57","primary","33000"],["42","secondary","83363"],["54","secondary","22068"],["65","primary","4512"],["26","primary","7726"],["56","unknown","5632"],["31","unknown","635"],["43","secondary","82498"],["34","secondary","112504"],["55","unknown","4056"],["47","secondary","78778"],["44","unknown","1174"],["45","primary","44588"],["86","secondary","1503"],["31","secondary","104499"],["42","primary","40882"],["28","primary","1961"],["24","unknown","3729"],["58","primary","48625"],["35","primary","13227"],["47","tertiary","49685"],["50","primary","42974"],["73","primary","2617"],["40","unknown","9716"],["42","tertiary","93304"],["50","tertiary","43378"],["21","secondary","12283"],["25","tertiary","27302"],["64","primary","811"],["67","secondary","16353"],["23","secondary","21128"],["56","primary","16366"],["55","primary","40416"],["28","secondary","64651"],["52","secondary","36593"],["54","primary","18305"],["41","secondary","91940"],["40","secondary","98662"],["33","unknown","24316"],["23","tertiary","1998"],["60","unknown","15024"],["77","primary","1360"],["59","unknown","8646"],["53","secondary","62148"],["27","secondary","48959"],["38","unknown","3638"],["22","secondary","7178"],["26","secondary","34353"],["60","secondary","19437"],["79","primary","8985"],["29","tertiary","54314"],["51","tertiary","31479"],["69","primary","858"],["53","tertiary","45412"],["28","unknown","1390"],["40","tertiary","75443"],["32","tertiary","141981"],["49","tertiary","27788"],["32","unknown","21538"],["53","primary","37193"],["19","unknown","1169"],["44","tertiary","72648"],["58","secondary","45864"],["53","unknown","4548"],["38","primary","17406"],["27","tertiary","25774"],["45","unknown","12395"],["59","secondary","46515"],["48","tertiary","56018"],["83","secondary","0"],["36","secondary","86138"],["64","tertiary","2415"],["50","unknown","9220"],["36","unknown","3541"],["37","tertiary","84184"],["46","unknown","9570"],["33","tertiary","105706"],["54","tertiary","63140"],["40","primary","14909"],["66","tertiary","13910"],["87","primary","230"],["50","secondary","70579"],["78","tertiary","226"],["36","tertiary","130534"],["66","primary","953"],["25","secondary","17283"],["70","primary","8313"],["44","primary","17564"],["47","unknown","7383"],["71","primary","4657"],["73","unknown","519"],["22","unknown","596"],["77","secondary","610"],["57","secondary","72359"],["35","secondary","103576"],["27","unknown","3255"],["84","primary","639"],["75","tertiary","3810"],["72","secondary","4130"],["45","tertiary","27906"],["73","secondary","19"],["60","primary","90637"],["19","secondary","302"],["49","primary","45604"],["72","primary","5974"],["30","tertiary","103494"],["26","tertiary","18640"],["24","secondary","11219"],["25","unknown","10788"],["22","tertiary","1852"],["44","secondary","101452"],["76","primary","2676"],["39","primary","25197"],["27","primary","2079"],["51","unknown","42195"],["64","unknown","2923"],["31","tertiary","119916"],["34","tertiary","132905"],["77","tertiary","12461"],["63","primary","9128"],["79","secondary","4738"],["56","tertiary","66399"],["48","primary","38132"],["35","tertiary","97035"],["41","unknown","7318"],["78","secondary","499"],["60","tertiary","14237"],["69","secondary","745"],["58","tertiary","47836"],["30","secondary","57899"],["52","primary","7776"],["75","primary","852"],["58","unknown","6857"],["21","unknown","137"],["33","secondary","132657"],["61","tertiary","13623"],["55","secondary","38884"],["70","tertiary","15834"],["31","primary","31358"],["34","primary","6941"],["24","tertiary","172"],["29","unknown","3593"],["37","secondary","99404"],["28","tertiary","37583"],["43","tertiary","80147"],["38","secondary","95157"],["46","tertiary","28075"],["32","primary","2897"],["80","primary","8031"],["67","unknown","1392"],["48","secondary","60707"],["75","secondary","37617"],["51","secondary","36140"],["78","primary","229"],["42","unknown","9794"],["81","secondary","1"],["38","tertiary","157119"],["39","unknown","1169"],["66","secondary","14962"],["61","unknown","4629"],["83","primary","1522"],["41","tertiary","81432"],["67","tertiary","701"],["49","unknown","3109"],["54","unknown","14110"],["25","primary","-810"],["37","primary","42493"],["64","secondary","1574"],["30","primary","5562"],["48","unknown","11852"],["63","tertiary","133"],["41","primary","22592"],["37","unknown","9610"],["47","primary","11363"],["39","secondary","66947"],["34","unknown","4415"],["23","unknown","817"],["20","secondary","1984"],["59","primary","25054"],["56","secondary","68493"],["74","secondary","5935"],["59","tertiary","32141"],["46","secondary","64886"],["23","primary","18416"],["70","secondary","11445"],["43","primary","33859"],["57","tertiary","39487"],["51","primary","29286"],["80","secondary","17070"],["36","primary","10443"],["61","secondary","17735"],["19","primary","103"],["52","unknown","4370"],["61","primary","2533"],["46","primary","16323"],["24","primary","111"],["39","tertiary","50319"],["79","unknown","2628"],["63","secondary","9030"],["45","secondary","48096"],["62","secondary","1748"],["35","unknown","871"]]},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_1340703963","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:17:38+0000","dateFinished":"2016-08-19T12:17:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13302"},{"text":"","dateUpdated":"2016-08-19T12:17:40+0000","config":{"colWidth":12,"enabled":true,"tableHide":false,"editorHide":true,"editorMode":"ace/mode/scala","results":[],"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"result":{"code":"SUCCESS","type":"TEXT","msg":""},"apps":[],"jobName":"paragraph_1453476675644_16167436","id":"20160122-153115_1965287282","dateCreated":"2016-01-22T03:31:15+0000","dateStarted":"2016-08-19T12:17:45+0000","dateFinished":"2016-08-19T12:17:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:13303"}],"name":"Tutorial for Python","id":"tutorial-python","noteParams":{},"noteForms":{},"angularObjects":{},"config":{"looknfeel":"default","isZeppelinNotebookCronEnable":false,"personalizedMode":"false"},"info":{}}